(\b([\w/\\]*[/\\])?ps_main.graph)
(\b([\w/\\]*[/\\])?testfile.py)
(\b([\w/\\]*[/\\])?Unit.graph)
(\b([\w/\\]*[/\\])?Unit.graph.py)
(\b([\w/\\]*[/\\])?UnitPipeline.graph)
(\b([\w/\\]*[/\\])?utils.sh)
(\b([\w/\\]*[/\\])?World.graph)
(\b([\w/\\]*[/\\])?World.graph.py)
(\b([\w/\\]*[/\\])?BasicMaterial.hlsl)
(\b([\w/\\]*[/\\])?balanced_noise.dds)
(\b([\w/\\]*[/\\])?build.gradle)
(\b([\w/\\]*[/\\])?circlehighlight.png)
(\b([\w/\\]*[/\\])?DiffuseTexture.dds)
(\b([\w/\\]*[/\\])?digits.dds)
(\b([\w/\\]*[/\\])?distinctcolors.dds)
(\b([\w/\\]*[/\\])?Dosis-Bold.ttf)
(\b([\w/\\]*[/\\])?Dosis-Book.ttf)
(\b([\w/\\]*[/\\])?Dosis-ExtraBold.ttf)
(\b([\w/\\]*[/\\])?Dosis-ExtraLight.ttf)
(\b([\w/\\]*[/\\])?Dosis-Light.ttf)
(\b([\w/\\]*[/\\])?Dosis-Medium.ttf)
(\b([\w/\\]*[/\\])?Dosis-SemiBold.ttf)
(\b([\w/\\]*[/\\])?FONTLOG.txt)
(\b([\w/\\]*[/\\])?OFL.txt)
(\b([\w/\\]*[/\\])?fonts.dat)
(\b([\w/\\]*[/\\])?.gitignore)
(\b([\w/\\]*[/\\])?Open Font License FAQ.markdown)
(\b([\w/\\]*[/\\])?Open Font License.markdown)
(\b([\w/\\]*[/\\])?Orbitron Black.otf)
(\b([\w/\\]*[/\\])?Orbitron Black.ttf)
(\b([\w/\\]*[/\\])?Orbitron Bold.otf)
(\b([\w/\\]*[/\\])?Orbitron Bold.ttf)
(\b([\w/\\]*[/\\])?Orbitron Light.otf)
(\b([\w/\\]*[/\\])?Orbitron Light.ttf)
(\b([\w/\\]*[/\\])?Orbitron Medium.otf)
(\b([\w/\\]*[/\\])?Orbitron Medium.ttf)
(\b([\w/\\]*[/\\])?readme.markdown)
(\b([\w/\\]*[/\\])?OFL.txt)
(\b([\w/\\]*[/\\])?PoiretOne-Regular.ttf)
(\b([\w/\\]*[/\\])?.gitignore)
(\b([\w/\\]*[/\\])?Open Font License FAQ.markdown)
(\b([\w/\\]*[/\\])?Open Font License.markdown)
(\b([\w/\\]*[/\\])?Raleway Thin.otf)
(\b([\w/\\]*[/\\])?Raleway Thin.ttf)
(\b([\w/\\]*[/\\])?readme.markdown)
(\b([\w/\\]*[/\\])?OFL.txt)
(\b([\w/\\]*[/\\])?Shojumaru-Regular.ttf)
(\b([\w/\\]*[/\\])?VeraMono.ttf)
(\b([\w/\\]*[/\\])?Vera_COPYRIGHT.TXT)
(\b([\w/\\]*[/\\])?Vera_RELEASENOTES.TXT)
(\b([\w/\\]*[/\\])?GGXTable.dds)
(\b([\w/\\]*[/\\])?glosslut.dds)
(\b([\w/\\]*[/\\])?glosstranslut.dds)
(\b([\w/\\]*[/\\])?icon_browser.png)
(\b([\w/\\]*[/\\])?icon_console.png)
(\b([\w/\\]*[/\\])?icon_placements.png)
(\b([\w/\\]*[/\\])?icon_profiler.png)
(\b([\w/\\]*[/\\])?icon_save.png)
(\b([\w/\\]*[/\\])?icon_settings.png)
(\b([\w/\\]*[/\\])?icon_terrain.png)
(\b([\w/\\]*[/\\])?icon_test.png)
(\b([\w/\\]*[/\\])?metricsdigits.dds)
(\b([\w/\\]*[/\\])?normalsfitting.dds)
(\b([\w/\\]*[/\\])?desertsky attribution.txt)
(\b([\w/\\]*[/\\])?desertsky.jpg)
(\b([\w/\\]*[/\\])?samplesky attribution.txt)
(\b([\w/\\]*[/\\])?samplesky.dds)
(\b([\w/\\]*[/\\])?samplesky2 attribution.txt)
(\b([\w/\\]*[/\\])?samplesky2.dds)
(\b([\w/\\]*[/\\])?samplesky2_diffuse.dds)
(\b([\w/\\]*[/\\])?samplesky2_specular.dds)
(\b([\w/\\]*[/\\])?waternoise.png)
(\b([\w/\\]*[/\\])?white.dds)
(\b([\w/\\]*[/\\])?basic.pixel.hlsl)
(\b([\w/\\]*[/\\])?basic.vertex.hlsl)
(\b([\w/\\]*[/\\])?clustered.csh)
(\b([\w/\\]*[/\\])?Beams.geo.hlsl)
(\b([\w/\\]*[/\\])?Beams.pixel.hlsl)
(\b([\w/\\]*[/\\])?Beams.vertex.hlsl)
(\b([\w/\\]*[/\\])?cascadevis.pixel.hlsl)
(\b([\w/\\]*[/\\])?resolvedebug.pixel.hlsl)
(\b([\w/\\]*[/\\])?debugging.pixel.hlsl)
(\b([\w/\\]*[/\\])?lib_helper.sh)
(\b([\w/\\]*[/\\])?lib_lightshape.sh)
(\b([\w/\\]*[/\\])?lib_shadow.sh)
(\b([\w/\\]*[/\\])?main.pixel.hlsl)
(\b([\w/\\]*[/\\])?persamplemask.pixel.hlsl)
(\b([\w/\\]*[/\\])?resolve.pixel.hlsl)
(\b([\w/\\]*[/\\])?resolveambient.pixel.hlsl)
(\b([\w/\\]*[/\\])?resolvelight.pixel.hlsl)
(\b([\w/\\]*[/\\])?resolvelightgraph.pixel.hlsl)
(\b([\w/\\]*[/\\])?resolvertshadows.h)
(\b([\w/\\]*[/\\])?resolveutil.h)
(\b([\w/\\]*[/\\])?tiled.csh)
(\b([\w/\\]*[/\\])?depthonly.pixel.hlsl)
(\b([\w/\\]*[/\\])?depthonly.vertex.hlsl)
(\b([\w/\\]*[/\\])?illum.pixel.hlsl)
(\b([\w/\\]*[/\\])?illum.vertex.hlsl)
(\b([\w/\\]*[/\\])?raytest.geo.hlsl)
(\b([\w/\\]*[/\\])?resolvefog.h)
(\b([\w/\\]*[/\\])?cloudresolve.pixel.hlsl)
(\b([\w/\\]*[/\\])?cloudvolume.pixel.hlsl)
(\b([\w/\\]*[/\\])?depthonlyutil.h)
(\b([\w/\\]*[/\\])?depthweighted.sh)
(\b([\w/\\]*[/\\])?glassshaderexp.sh)
(\b([\w/\\]*[/\\])?illum.pixel.hlsl)
(\b([\w/\\]*[/\\])?resolve.h)
(\b([\w/\\]*[/\\])?resolve.pixel.hlsl)
(\b([\w/\\]*[/\\])?StochasticDebug.sh)
(\b([\w/\\]*[/\\])?util.h)
(\b([\w/\\]*[/\\])?unlit.pixel.hlsl)
(\b([\w/\\]*[/\\])?hotkey.txt)
(\b([\w/\\]*[/\\])?Basic.sh)
(\b([\w/\\]*[/\\])?Color.sh)
(\b([\w/\\]*[/\\])?Conditions.sh)
(\b([\w/\\]*[/\\])?Input.sh)
(\b([\w/\\]*[/\\])?Lighting.sh)
(\b([\w/\\]*[/\\])?MaterialParam.sh)
(\b([\w/\\]*[/\\])?Noise.sh)
(\b([\w/\\]*[/\\])?Output.sh)
(\b([\w/\\]*[/\\])?Templates.sh)
(\b([\w/\\]*[/\\])?Test.sh)
(\b([\w/\\]*[/\\])?Texture.sh)
(\b([\w/\\]*[/\\])?ConvToPBR.tech)
(\b([\w/\\]*[/\\])?WoodGnarlGrainStain.graph)
(\b([\w/\\]*[/\\])?WoodModulator001.graph)
(\b([\w/\\]*[/\\])?WoodModulator002.graph)
(\b([\w/\\]*[/\\])?WoodPlanks.graph)
(\b([\w/\\]*[/\\])?WoodRings002.graph)
(\b([\w/\\]*[/\\])?Wood_04_G.graph)
(\b([\w/\\]*[/\\])?ProcWood.graph)
(\b([\w/\\]*[/\\])?ProcWood.tech)
(\b([\w/\\]*[/\\])?Basic.tech)
(\b([\w/\\]*[/\\])?PerPixel.h)
(\b([\w/\\]*[/\\])?Basic.sh)
(\b([\w/\\]*[/\\])?GeoGenerator.sh)
(\b([\w/\\]*[/\\])?GradFlagTexturing.h)
(\b([\w/\\]*[/\\])?GradientFlags.h)
(\b([\w/\\]*[/\\])?HeightsSample.h)
(\b([\w/\\]*[/\\])?ITerrainTexturing.h)
(\b([\w/\\]*[/\\])?StrataTexturing.h)
(\b([\w/\\]*[/\\])?TerrainBasePS.sh)
(\b([\w/\\]*[/\\])?TerrainGenerator.h)
(\b([\w/\\]*[/\\])?TerrainIntersection.sh)
(\b([\w/\\]*[/\\])?basic.csh)
(\b([\w/\\]*[/\\])?basic.geo.hlsl)
(\b([\w/\\]*[/\\])?basic.pixel.hlsl)
(\b([\w/\\]*[/\\])?basic2D.vertex.hlsl)
(\b([\w/\\]*[/\\])?basic3D.vertex.hlsl)
(\b([\w/\\]*[/\\])?Illum.tech)
(\b([\w/\\]*[/\\])?CloudVolume.tech)
(\b([\w/\\]*[/\\])?IllumLegacy.ds)
(\b([\w/\\]*[/\\])?IllumLegacy.tech)
(\b([\w/\\]*[/\\])?Invalid.tech)
(\b([\w/\\]*[/\\])?MeshMarker.tech)
(\b([\w/\\]*[/\\])?Particles.tech)
(\b([\w/\\]*[/\\])?Unlit.tech)
(\b([\w/\\]*[/\\])?Shared.tech)
(\b([\w/\\]*[/\\])?skinning.geo.hlsl)
(\b([\w/\\]*[/\\])?skinning.vertex.hlsl)
(\b([\w/\\]*[/\\])?skinning_viatbuffer.vertex.hlsl)
(\b([\w/\\]*[/\\])?SkinTransform.h)
(\b([\w/\\]*[/\\])?TechniqueLibrary/Framework/CommonResources.hlsl)
(\b([\w/\\]*[/\\])?TechniqueLibrary/Core/gbuffer.hlsl)
(\b([\w/\\]*[/\\])?TechniqueLibrary/Framework/Surface.hlsl)
(\b([\w/\\]*[/\\])?TechniqueLibrary/Framework/Transform.hlsl)
(\b([\w/\\]*[/\\])?TechniqueLibrary/Framework/MainGeometry.hlsl)
(\b([\w/\\]*[/\\])?EdgeDetection.h)
(\b([\w/\\]*[/\\])?Equations.h)
(\b([\w/\\]*[/\\])?MathConstants.h)
(\b([\w/\\]*[/\\])?Misc.h)
(\b([\w/\\]*[/\\])?perlinnoise.h)
(\b([\w/\\]*[/\\])?ProjectionMath.h)
(\b([\w/\\]*[/\\])?SurfaceAlgorithm.h)
(\b([\w/\\]*[/\\])?TechniqueLibrary/Math/TextureAlgorithm.hlsl)
(\b([\w/\\]*[/\\])?TechniqueLibrary/Math/TransformAlgorithm.hlsl)
(\b([\w/\\]*[/\\])?Metrics.h)
(\b([\w/\\]*[/\\])?metricsrender.geo.hlsl)
(\b([\w/\\]*[/\\])?metricsrender.pixel.hlsl)
(\b([\w/\\]*[/\\])?metricsrender.vertex.hlsl)
(\b([\w/\\]*[/\\])?metricsrig.h)
(\b([\w/\\]*[/\\])?BrushUtils.h)
(\b([\w/\\]*[/\\])?CommonBrushes.h)
(\b([\w/\\]*[/\\])?CommonShapes.h)
(\b([\w/\\]*[/\\])?DebuggingPanels.h)
(\b([\w/\\]*[/\\])?DebuggingShapes.h)
(\b([\w/\\]*[/\\])?DebuggingShapes.pixel.hlsl)
(\b([\w/\\]*[/\\])?Interfaces.h)
(\b([\w/\\]*[/\\])?Shapes.sh)
(\b([\w/\\]*[/\\])?distantblur.pixel.hlsl)
(\b([\w/\\]*[/\\])?occludingsunflare.sh)
(\b([\w/\\]*[/\\])?outlinehighlight.pixel.hlsl)
(\b([\w/\\]*[/\\])?rainparticles.sh)
(\b([\w/\\]*[/\\])?SeparableFilter.csh)
(\b([\w/\\]*[/\\])?SeparableFilter.pixel.hlsl)
(\b([\w/\\]*[/\\])?simrain.sh)
(\b([\w/\\]*[/\\])?Sky.pixel.hlsl)
(\b([\w/\\]*[/\\])?sparkparticlestest.sh)
(\b([\w/\\]*[/\\])?AmbientResolve.h)
(\b([\w/\\]*[/\\])?AreaLights.h)
(\b([\w/\\]*[/\\])?BasicLightingEnvironment.h)
(\b([\w/\\]*[/\\])?CascadeResolve.h)
(\b([\w/\\]*[/\\])?Constants.h)
(\b([\w/\\]*[/\\])?GGXTransmission.sh)
(\b([\w/\\]*[/\\])?DiffuseMethods.h)
(\b([\w/\\]*[/\\])?DirectionalResolve.h)
(\b([\w/\\]*[/\\])?Forward.h)
(\b([\w/\\]*[/\\])?IBLAlgorithm.h)
(\b([\w/\\]*[/\\])?IBLPrecalc.h)
(\b([\w/\\]*[/\\])?IBLRef.h)
(\b([\w/\\]*[/\\])?ImageBased.h)
(\b([\w/\\]*[/\\])?LightDesc.h)
(\b([\w/\\]*[/\\])?LightingAlgorithm.h)
(\b([\w/\\]*[/\\])?LightShapes.h)
(\b([\w/\\]*[/\\])?MaterialQuery.h)
(\b([\w/\\]*[/\\])?optimized-ggx.h)
(\b([\w/\\]*[/\\])?RangeFogResolve.h)
(\b([\w/\\]*[/\\])?ResolverInterface.h)
(\b([\w/\\]*[/\\])?SampleFiltering.h)
(\b([\w/\\]*[/\\])?BlurStep.pixel.hlsl)
(\b([\w/\\]*[/\\])?BuildMask.csh)
(\b([\w/\\]*[/\\])?BuildReflection.csh)
(\b([\w/\\]*[/\\])?Debugging.pixel.hlsl)
(\b([\w/\\]*[/\\])?DownsampleStep.pixel.hlsl)
(\b([\w/\\]*[/\\])?PixelBasedIteration.h)
(\b([\w/\\]*[/\\])?ReflectionUtility.h)
(\b([\w/\\]*[/\\])?SSConstants.h)
(\b([\w/\\]*[/\\])?ConsRaster.sh)
(\b([\w/\\]*[/\\])?depthonly.geo.hlsl)
(\b([\w/\\]*[/\\])?depthonly.pixel.hlsl)
(\b([\w/\\]*[/\\])?depthonly.vertex.hlsl)
(\b([\w/\\]*[/\\])?GeometryConfiguration.h)
(\b([\w/\\]*[/\\])?rtshadmetrics.sh)
(\b([\w/\\]*[/\\])?rtwritetiles.sh)
(\b([\w/\\]*[/\\])?TechniqueLibrary/SceneEngine/Library/ShadowProjection.hlsl)
(\b([\w/\\]*[/\\])?ShadowsResolve.h)
(\b([\w/\\]*[/\\])?ShadowTypes.h)
(\b([\w/\\]*[/\\])?SpecularMethods.h)
(\b([\w/\\]*[/\\])?SphericalHarmonics.h)
(\b([\w/\\]*[/\\])?erosiondebug.sh)
(\b([\w/\\]*[/\\])?FFT.csh)
(\b([\w/\\]*[/\\])?FFTDebugging.pixel.hlsl)
(\b([\w/\\]*[/\\])?InitSimGrid.csh)
(\b([\w/\\]*[/\\])?InitSimGrid2.csh)
(\b([\w/\\]*[/\\])?Ocean.h)
(\b([\w/\\]*[/\\])?ocean.pixel.hlsl)
(\b([\w/\\]*[/\\])?Ocean.tech)
(\b([\w/\\]*[/\\])?OceanLighting.h)
(\b([\w/\\]*[/\\])?OceanMaterial.tech)
(\b([\w/\\]*[/\\])?OceanNormals.csh)
(\b([\w/\\]*[/\\])?OceanNormalsShallow.csh)
(\b([\w/\\]*[/\\])?OceanPatch.vertex.hlsl)
(\b([\w/\\]*[/\\])?OceanRenderingConstants.h)
(\b([\w/\\]*[/\\])?OceanShallow.h)
(\b([\w/\\]*[/\\])?OceanVelocitiesDebugging.sh)
(\b([\w/\\]*[/\\])?PipeModelShallowWaterSim.csh)
(\b([\w/\\]*[/\\])?ShallowFlux.h)
(\b([\w/\\]*[/\\])?shallowsurface.sh)
(\b([\w/\\]*[/\\])?shallowsurface.tech)
(\b([\w/\\]*[/\\])?ShallowWaterSim.csh)
(\b([\w/\\]*[/\\])?tickerosion.csh)
(\b([\w/\\]*[/\\])?Particle.h)
(\b([\w/\\]*[/\\])?Particle.vertex.hlsl)
(\b([\w/\\]*[/\\])?Sprite.geo.hlsl)
(\b([\w/\\]*[/\\])?debugging.pixel.hlsl)
(\b([\w/\\]*[/\\])?hdrluminance.csh)
(\b([\w/\\]*[/\\])?tonemap.h)
(\b([\w/\\]*[/\\])?tonemap.pixel.hlsl)
(\b([\w/\\]*[/\\])?copyterraintile.sh)
(\b([\w/\\]*[/\\])?Terrain.h)
(\b([\w/\\]*[/\\])?TerrainLayer.h)
(\b([\w/\\]*[/\\])?terrainmanipulators.sh)
(\b([\w/\\]*[/\\])?terrainmodification.sh)
(\b([\w/\\]*[/\\])?terrainmodification_int.sh)
(\b([\w/\\]*[/\\])?TerrainSurface.h)
(\b([\w/\\]*[/\\])?GrassSpawn.geo.hlsl)
(\b([\w/\\]*[/\\])?GrassSpawn.pixel.hlsl)
(\b([\w/\\]*[/\\])?GrassSpawn.vertex.hlsl)
(\b([\w/\\]*[/\\])?imposter.sh)
(\b([\w/\\]*[/\\])?ImposterMaterial.tech)
(\b([\w/\\]*[/\\])?InstanceSpawn.geo.hlsl)
(\b([\w/\\]*[/\\])?InstanceSpawnSeparate.csh)
(\b([\w/\\]*[/\\])?InstanceVS.h)
(\b([\w/\\]*[/\\])?Vegetation.tech)
(\b([\w/\\]*[/\\])?WindAnim.h)
(\b([\w/\\]*[/\\])?debugging.pixel.hlsl)
(\b([\w/\\]*[/\\])?injectlight.csh)
(\b([\w/\\]*[/\\])?resolvefog.h)
(\b([\w/\\]*[/\\])?resolvefog.pixel.hlsl)
(\b([\w/\\]*[/\\])?shadowsfilter.pixel.hlsl)
(\b([\w/\\]*[/\\])?VolumetricFog.h)
(\b([\w/\\]*[/\\])?Binding.h)
(\b([\w/\\]*[/\\])?Prefix.h)
(\b([\w/\\]*[/\\])?RootSignature.cfg)
(\b([\w/\\]*[/\\])?RootSignatureCS.cfg)
(\b([\w/\\]*[/\\])?arealight.tech)
(\b([\w/\\]*[/\\])?debug.sh)
(\b([\w/\\]*[/\\])?debug3d.sh)
(\b([\w/\\]*[/\\])?BuildInterpolators.h)
(\b([\w/\\]*[/\\])?PreviewTemplates.sh)
(\b([\w/\\]*[/\\])?geowires.geo.hlsl)
(\b([\w/\\]*[/\\])?HighlightVis.pixel.hlsl)
(\b([\w/\\]*[/\\])?solidwireframe.geo.hlsl)
(\b([\w/\\]*[/\\])?solidwireframe.pixel.hlsl)
(\b([\w/\\]*[/\\])?TechniqueLibrary/Utility/Colour.hlsl)
(\b([\w/\\]*[/\\])?DistinctColors.h)
(\b([\w/\\]*[/\\])?LoadGBuffer.h)
(\b([\w/\\]*[/\\])?temp.txt)
(\b([\w/\\]*[/\\])?TestMaterial.graph)
(\b([\w/\\]*[/\\])?AOGenProcess.sh)
(\b([\w/\\]*[/\\])?BRDFSlice.sh)
(\b([\w/\\]*[/\\])?Cubemap.h)
(\b([\w/\\]*[/\\])?DecodeParametersTexture_ColoredSpecular.sh)
(\b([\w/\\]*[/\\])?DiffusePrefilter.sh)
(\b([\w/\\]*[/\\])?EquirectangularToCube.sh)
(\b([\w/\\]*[/\\])?SimpleTextures.sh)
(\b([\w/\\]*[/\\])?SpecularWithMask.sh)
(\b([\w/\\]*[/\\])?SplitSum.sh)
(\b([\w/\\]*[/\\])?TextureProcess.sh)
(\b([\w/\\]*[/\\])?TextureProcess_cblayout.txt)
