
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	~~ "Silhouette" configuration just has the minimum support to get the correct geometry
	~~ silhouette (plus alpha testing)

~Silhouette
	~Inherit; shared.tech:Skinnable; shared.tech:VegetationSpawn
	~Selectors
		GEO_HAS_COLOR
		GEO_HAS_TEXCOORD
		GEO_HAS_NORMAL
		MAT_ALPHA_TEST
		RES_HAS_DiffuseTexture
		MAT_VCOLOR_IS_ANIM_PARAM

~VS_NoPatches
	~Inherit; Silhouette
	VertexShader=xleres/TechniqueLibrary/Standard/nopatches.vertex.hlsl:main

~VS_DeformVertex
	~Inherit; Silhouette
	VertexShader=xleres/TechniqueLibrary/Standard/main.vertex.hlsl:frameworkEntryWithDeformVertex

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	~~ "Illum" style techniques
	~~      -- these are techniques that are used when drawing the object into the main scene and we're drawing
	~~      the object in it's "main" visual look -- with all of the assigned material, texture & lighting properties

~IllumShared
	~Inherit; shared.tech:LegacyCommonMaterial; shared.tech:System
	~Selectors
		GEO_HAS_TEXBITANGENT
		GEO_HAS_NORMAL
		GEO_HAS_TEXTANGENT
		GEO_HAS_PER_VERTEX_AO
		CLASSIFY_NORMAL_MAP
		~SKIP_MATERIAL_DIFFUSE; relevance=value!=0

~Forward
	~Inherit; IllumShared; shared.tech:Forward

~Deferred
	~Inherit; IllumShared; shared.tech:Deferred

~DepthOnly
	~Selectors
		MAT_ALPHA_TEST_PREDEPTH
		STOCHASTIC_TRANS
		STOCHASTIC_TRANS_PRIMITIVEID
		STOCHASTIC_TRANS_OPACITY

~RayTest
	~Selectors
		VSOUT_HAS_WORLD_POSITION=1
		INTERSECTION_TEST
	GeometryShader=xleres/TechniqueLibrary/Standard/raytest.geo.hlsl:triangles
	PixelShader=null

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~Deferred_NoPatches
	~Inherit; Deferred
	PixelShader=xleres/TechniqueLibrary/Standard/nopatches.pixel.hlsl:deferred

~Deferred_PerPixel
	~Inherit; Deferred
	PixelShader=xleres/TechniqueLibrary/Standard/deferred.pixel.hlsl:frameworkEntry

~Deferred_PerPixelAndEarlyRejection
	~Inherit; Deferred
	PixelShader=xleres/TechniqueLibrary/Standard/deferred.pixel.hlsl:frameworkEntryWithEarlyRejection

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~Forward_NoPatches
	~Inherit; Forward
	PixelShader=xleres/TechniqueLibrary/Standard/nopatches.pixel.hlsl:forward

~Forward_PerPixel
	~Inherit; Forward
	PixelShader=xleres/TechniqueLibrary/Standard/forward.pixel.hlsl:frameworkEntry

~Forward_PerPixelAndEarlyRejection
	~Inherit; Forward
	PixelShader=xleres/TechniqueLibrary/Standard/forward.pixel.hlsl:frameworkEntryWithEarlyRejection

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~DepthOnly_NoPatches
	~Inherit; DepthOnly
	PixelShader=xleres/TechniqueLibrary/Standard/depthonly.pixel.hlsl:frameworkEntryDepthOnly

~DepthOnly_EarlyRejection
	~Inherit; DepthOnly
	PixelShader=xleres/TechniqueLibrary/Standard/depthonly.pixel.hlsl:frameworkEntryDepthOnlyWithEarlyRejection

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~RayTest_NoPatches
	~Inherit; RayTest

~RayTest_EarlyRejection
	~Inherit; RayTest
	PixelShader=xleres/TechniqueLibrary/Standard/depthonly.pixel.hlsl:frameworkEntryDepthOnlyWithEarlyRejection
